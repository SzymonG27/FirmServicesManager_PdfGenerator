// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PDFGenerator.Data;

namespace PDFGenerator.Migrations.ApplicationDb
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210422130920_SecInitial")]
    partial class SecInitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PDFGenerator.Models.ClientModels.Accesory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FixID")
                        .HasColumnType("int");

                    b.Property<string>("NameOfAccesory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfAccesory")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Accesories");
                });

            modelBuilder.Entity("PDFGenerator.Models.ClientModels.Client", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isFirm")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("PDFGenerator.Models.ClientModels.ClientFirmRelation", b =>
                {
                    b.Property<string>("ClientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("FirmID")
                        .HasColumnType("int");

                    b.HasKey("ClientID", "FirmID");

                    b.ToTable("ClientFirmRelations");
                });

            modelBuilder.Entity("PDFGenerator.Models.ClientModels.Firm", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirmName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NIP")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Firms");
                });

            modelBuilder.Entity("PDFGenerator.Models.ClientModels.Fix", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("CostOfRepair")
                        .HasColumnType("real");

                    b.Property<DateTime>("DateOfAdmission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfRelease")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpWhoAcceptID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsReleased")
                        .HasColumnType("bit");

                    b.Property<string>("ItemToFix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordIfExist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrivateComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhatAccesory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhatToFix")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Fixes");
                });
#pragma warning restore 612, 618
        }
    }
}
